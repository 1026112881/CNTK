load=ndlMacroDefine
run=DNN

ndlMacroDefine=[
    # Macro definitions
    MeanVarNorm(x)=[
        xMean = Mean(x);
        xStdDev = InvStdDev(x)
        xNorm=PerDimMeanVarNormalization(x, xMean, xStdDev)
    ]
]

DNN=[
    #define basic i/o
    featDim=363
    LabelDim=132
    hiddenDim=512

    features=Input(featDim, tag=feature)
    labels=Input(LabelDim, tag=label)

    GlobalMean=Parameter(featDim,   init=fromFile, initFromFilePath=$GlobalMean$,   computeGradient=false) 
    GlobalInvStd=Parameter(featDim, init=fromFile, initFromFilePath=$GlobalInvStd$, computeGradient=false)
    GlobalPrior=Parameter(LabelDim, init=fromFile, initFromFilePath=$GlobalPrior$,  computeGradient=false)
    logPrior=Log(GlobalPrior)

    # define network
    featNorm=PerDimMeanVarNormalization(features, GlobalMean, GlobalInvStd)

    # layer 1   363 X 512
    HL1=DNNLayer(featDim, hiddenDim, featNorm); 
    # last layer 512 X 132 
    OL=DNNLastLayer(hiddenDim, LabelDim, HL1);

    cr = CrossEntropyWithSoftmax(labels, OL, tag=Criteria);
    Err = ErrorPrediction(labels, OL, tag=Eval);
    ScaledLogLikelihood=Minus(OL, logPrior, tag=Output)
]
