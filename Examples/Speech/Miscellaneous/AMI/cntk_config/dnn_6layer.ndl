load=ndlMacroDefine
run=ndlCreateNetwork

ndlMacroDefine=[
    # Macro definitions

    MeanVarNorm(x)
    {
        xMean = Mean(x)
        xStdDev = InvStdDev(x)
        xNorm=PerDimMeanVarNormalization(x,xMean,xStdDev)
    }

    LogPrior(labels)
    {
        Prior=Mean(labels)
        LogPrior=Log(Prior)
    }

]

ndlCreateNetwork=[

    #define basic i/o
    featDim=$featDim$
    labelDim=$labelDim$
    hiddenDim=2048
    features=Input(featDim, tag=feature)
    labels=Input(labelDim, tag=label)

     # define network
     featNorm = MeanVarNorm(features)
     L1 = SBFF(featNorm,hiddenDim,featDim)
     L2 = SBFF(L1,hiddenDim,hiddenDim)
     L3 = SBFF(L2,hiddenDim,hiddenDim)
     L4 = SBFF(L3,hiddenDim,hiddenDim)
     L5 = SBFF(L4,hiddenDim,hiddenDim)
     L6 = SBFF(L5,hiddenDim,hiddenDim)
     CE = SMBFF(L6,labelDim,hiddenDim,labels,tag=Criteria)
     Err = ErrorPrediction(labels,CE.BFF.FF.P,tag=Eval)

     # define output (scaled loglikelihood)
     logPrior = LogPrior(labels)
     ScaledLogLikelihood=Minus(CE.BFF.FF.P,logPrior,tag=Output)
]
